name: CI

on: [push]

jobs:
  code-style-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cpplint
    - name: Analysing the code with cpplint
      run: |
        cpplint --recursive .

  build:
    runs-on: ubuntu-latest
    container: veiasai/grid-env:1.0
  
    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      working-directory: ${{runner.workspace}}
      run: |
        cmake -E make_directory build
        cmake -E make_directory build/debug
        cmake -E make_directory build/release

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build/debug
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=debug

    - name: Build Debug
      working-directory: ${{runner.workspace}}/build/debug
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: 
        cmake --build . --config debug

    - name: Test Debug
      working-directory: ${{runner.workspace}}/build/debug
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C debug

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build/release
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=release

    - name: Build Release
      working-directory: ${{runner.workspace}}/build/release
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config release

    - name: Test Release
      working-directory: ${{runner.workspace}}/build/release
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C release

